# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    directory_img: '%kernel.project_dir%/public/uploads/img'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    admin.post:
        class: App\Admin\PostAdmin
        arguments: [~, App\Entity\Post, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Новости }
        public: true

    App\Form\RegistrationAdvocatFormType:
        tags:
            - { name: form.type }

    App\Form\RegistrationUserFormType:
        tags:
            - { name: form.type }

    App\Doctrine\HashPasswordListener:
        tags:
            - { name: doctrine.event_subscriber }

    App\Service\FormValidateRegistration:

    admin.feedback:
        class: App\Admin\FeedbackAdmin
        arguments: [~, App\Entity\Feedback, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Обратная связь }
        public: true

    admin.document:
        class: App\Admin\DocumentAdmin
        arguments: [~, App\Entity\Document, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Документы }
        public: true

    admin.partner:
        class: App\Admin\PartnerAdmin
        arguments: [~, App\Entity\Partner, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Партнеры }
        public: true

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Категории }
        public: true

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Продукты }
        public: true

    App\Service\FeedbackService:
        public: true

    App\Service\ProductService:
        public: true

    App\Service\UserService:
        arguments:
            $directory: '%directory_img%'

